<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.storage.modules.sys.dao.RoleDao">
    <sql id="roleColumns">
        r.id as "id",
        r.role_name as "roleName",
        r.ch_name as "chName",
        r.create_by as "createBy",
		r.create_date as "createDate",
		r.update_by as "updateBy",
		r.update_date as "updateDate",
		r.remarks as "remarks",
		r.del_flag as "delFlag"
    </sql>

    <select id="getRoleByUserId" parameterType="String" resultType="com.example.storage.modules.sys.entity.Role">
        select
        <include refid="roleColumns"/>
        from role r where r.id in
        (select role_id from user_role where user_id = #{id}) ;
    </select>


    <select id="selectRoleById" parameterType="String" resultType="com.example.storage.modules.sys.entity.Role">
        select
        <include refid="roleColumns"/>
        from role r where r.id =
        (select role_id from user_role where user_id = #{user_id} and role_id = #{role_id});
    </select>

    <select id="getAllRoles" resultType="com.example.storage.modules.sys.pojo.vo.back.RoleVo">
        select r.id as "roleId", r.role_name as "roleName", r.ch_name as "chName" from role r where role_name != 'super_admin'
    </select>

    <select id="selsectRoleCount" parameterType="String" resultType="Integer">
        select count(*) from user_role where user_id = #{user_id}
    </select>

    <update id="updateRoleById" parameterType="String">
        update user_role set user_id = #{user_id},role_id = #{role_id} where user_id = #{user_id} and role_id = #{role_id}
    </update>

    <delete id="deleteRole" parameterType="String">
        delete from user_role where user_id = #{user_id} and role_id = #{role_id}
    </delete>

    <insert id="addRole" parameterType="String">
        insert into user_role(user_id,role_id) values(#{user_id}, #{role_id})
    </insert>

    <insert id="newRole" parameterType="String">
        insert into role(id,role_name,ch_name) values(#{id},#{role_name},#{ch_name})
    </insert>
    
    
    
    
    
    <select id="selectRoleByRoleName" resultType="com.example.storage.modules.sys.entity.Role">
        SELECT *
        FROM `role`
        WHERE `role_name` = #{roleName} 
        AND `del_flag` = #{isDeleted}
              LIMIT 1
    </select>

    <sql id="managerRoleListColumns">
        `id`,
        `remarks`,
        `role_name` AS `roleName`,
        `create_date` AS `createDate`,
        `update_date` AS `updateDate`,
        `permissions` AS `permissions`
    </sql>

    <select id="selectValidList" resultType="com.example.storage.modules.sys.entity.Role">
        SELECT <include refid="managerRoleListColumns"/>
        FROM `role`
        WHERE `del_flag` = #{isDeleted}
        ORDER BY `update_date` DESC
    </select>
    <select id="selectValidCount" resultType="int">
        SELECT COUNT(*)
        FROM `role`
        WHERE `del_flag` = #{isDeleted}
    </select>

    <select id="selectValidListByTemplate"
            resultType="com.example.storage.modules.sys.entity.Role">
        <bind name="template" value="'%' + template + '%'" />
        SELECT <include refid="managerRoleListColumns"/>
        FROM `role`
        WHERE (`role_name` LIKE  #{template}
          OR `remarks` LIKE  #{template}
        )
        AND `del_flag` = #{isDeleted}
        ORDER BY `update_date` DESC
    </select>
    <select id="selectValidCountByTemplate" resultType="int">
        <bind name="template" value="'%' + template + '%'" />
        SELECT COUNT(*)
        FROM `role`
        WHERE (`role_name` LIKE  #{template}
            OR `remarks` LIKE  #{template}
        )
        AND `del_flag` = #{isDeleted}
    </select>

    <select id="getAllRoleNames" resultType="String">
        SELECT `role_name` AS `roleName`
        FROM `role`
        WHERE `del_flag` = #{isDeleted}
    </select>
</mapper>